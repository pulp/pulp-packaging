From 5e8509e9e4a2422b2aa742b31562901e131e1b22 Mon Sep 17 00:00:00 2001
From: David Davis <daviddavis@redhat.com>
Date: Fri, 18 Aug 2017 14:06:29 -0400
Subject: [PATCH] Make messages durable by default in qpid

We were seeing messages disappear in durable queues when restarting
qpid. This coincides with the rabbitmq code (e.g. https://git.io/v7jNV).
---
 kombu/transport/qpid.py       | 7 ++++++-
 t/unit/transport/test_qpid.py | 4 ++--
 2 files changed, 8 insertions(+), 3 deletions(-)

diff --git a/kombu/transport/qpid.py b/kombu/transport/qpid.py
index dec2271e3..017d0c1ad 100644
--- a/kombu/transport/qpid.py
+++ b/kombu/transport/qpid.py
@@ -427,7 +427,8 @@ def _get(self, queue):
             rx.close()
         return message
 
-    def _put(self, routing_key, message, exchange=None, **kwargs):
+    def _put(self, routing_key, message, exchange=None, durable=True,
+             **kwargs):
         """Synchronously send a single message onto a queue or exchange.
 
         An internal method which synchronously sends a single message onto
@@ -460,6 +461,9 @@ def _put(self, routing_key, message, exchange=None, **kwargs):
             should be sent on. If no exchange is specified, the message is
             sent directly to a queue specified by routing_key.
         :type exchange: str
+        :keyword durable: whether or not the message should persist or be
+            durable.
+        :type durable: bool
 
         """
         if not exchange:
@@ -472,6 +476,7 @@ def _put(self, routing_key, message, exchange=None, **kwargs):
             msg_subject = str(routing_key)
         sender = self.transport.session.sender(address)
         qpid_message = qpid.messaging.Message(content=message,
+                                              durable=durable,
                                               subject=msg_subject)
         try:
             sender.send(qpid_message, sync=True)
diff --git a/t/unit/transport/test_qpid.py b/t/unit/transport/test_qpid.py
index bf7962121..5ca4f38a0 100644
--- a/t/unit/transport/test_qpid.py
+++ b/t/unit/transport/test_qpid.py
@@ -521,7 +521,7 @@ def test_channel__put_onto_queue(self, mock_qpid):
         )
         self.transport.session.sender.assert_called_with(address_str)
         mock_Message_cls.assert_called_with(
-            content=mock_message, subject=None,
+            content=mock_message, subject=None, durable=True
         )
         mock_sender = self.transport.session.sender.return_value
         mock_sender.send.assert_called_with(
@@ -543,7 +543,7 @@ def test_channel__put_onto_exchange(self, mock_qpid):
         )
         self.transport.session.sender.assert_called_with(addrstr)
         mock_Message_cls.assert_called_with(
-            content=mock_message, subject=mock_routing_key,
+            content=mock_message, subject=mock_routing_key, durable=True
         )
         mock_sender = self.transport.session.sender.return_value
         mock_sender.send.assert_called_with(
